before_install:
  - apt-get --quiet update --yes
  - apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1 libgmp-dev
  - apt-get install jq automake autoconf libtool pkg-config gettext perl python flex bison gperf
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-33" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;33.0.2" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "ndk;21.3.6528147" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export ANDROID_NDK_HOME=/home/jitpack/build/android-sdk-linux/ndk/21.3.6528147
  - ls $ANDROID_NDK_HOME
  - PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
  - chmod +x ./gradlew
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail
  - strongswan="$PWD/strongswan"
  - lib="$PWD/app/libs"
  - git clone -- git://git.openssl.org/openssl.git build/srclib/OpenSSL
  - pushd build/srclib/OpenSSL
  - git rev-parse --show-toplevel
  - git checkout -f OpenSSL_1_1_1t
  - git clean -dffx
  - PATH=$ANDROID_NDK/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
  - CC=armv7a-linux-androideabi16-clang ./Configure android-arm no-shared no-ssl3
    no-engine no-dso no-asm no-hw no-comp no-stdio -fPIC -DOPENSSL_PIC -D__ANDROID_API__=16
    -ffast-math -O3 -funroll-loops
  - make -j $(nproc)
  - mkdir -p "${lib}/armeabi-v7a"
  - cp libcrypto.a ${lib}/armeabi-v7a/
  - make distclean
  - CC=aarch64-linux-android21-clang ./Configure android-arm64 no-shared no-ssl3
    no-engine no-dso no-asm no-hw no-comp no-stdio -fPIC -DOPENSSL_PIC -D__ANDROID_API__=21
    -ffast-math -O3 -funroll-loops
  - make -j $(nproc)
  - mkdir -p "${lib}/arm64-v8a"
  - cp libcrypto.a ${lib}/arm64-v8a/
  - make distclean
  - CC=i686-linux-android16-clang ./Configure android-x86 no-shared no-ssl3 no-engine
    no-dso no-asm no-hw no-comp no-stdio -fPIC -DOPENSSL_PIC -D__ANDROID_API__=16
    -ffast-math -O3 -funroll-loops
  - make -j $(nproc)
  - mkdir -p "${lib}/x86"
  - cp libcrypto.a ${lib}/x86/
  - make distclean
  - CC=x86_64-linux-android21-clang ./Configure android-x86_64 no-shared no-ssl3
    no-engine no-dso no-asm no-hw no-comp no-stdio -fPIC -DOPENSSL_PIC -D__ANDROID_API__=21
    -ffast-math -O3 -funroll-loops
  - make -j $(nproc)
  - mkdir -p "${lib}/x86_64"
  - cp libcrypto.a ${lib}/x86_64/
  - cp -R include/ ${lib}/
  - make distclean
  - popd
  - echo "LOCAL_PATH := \$(call my-dir)" >"${lib}/Android.mk"
  - echo "include \$(CLEAR_VARS)" >>"${lib}/Android.mk"
  - echo "LOCAL_MODULE := libcrypto_static" >>"${lib}/Android.mk"
  - echo "LOCAL_SRC_FILES := \$(TARGET_ARCH_ABI)/libcrypto.a" >>"${lib}/Android.mk"
  - echo "LOCAL_EXPORT_C_INCLUDES := \$(LOCAL_PATH)/include" >>"${lib}/Android.mk"
  - echo "include \$(PREBUILT_STATIC_LIBRARY)" >>"${lib}/Android.mk"
  - pushd $strongswan$
  - ./autogen.sh
  - ./configure --disable-defaults
  - make dist -j $(nproc)
  - pushd $$lib$$
  - ls
install:
  - echo 'Done making dist'
  - cd strongswan/src/frontends/android
  - sed -i -e '/app\ {/alintOptions\ {abortOnError\ false}' build.gradle
  - cd ../
  - cp -r strongswan/src/frontends/android/app/src/main/libs/* app/src/libs
  - rm -fr strongswan/src/frontends/android/app/src/main/libs/*
  - rm -fr strongswan/src/frontends/android/app/build
  - ./gradlew build publishToMavenLocal
